{"version":3,"sources":["redux/Apis.js","config/config.js","components/SearchComponent.js","components/HomeComponent.js","redux/actions/index.js","redux/types.js","components/LoginComponent.js","routes/index.js","components/layout/Header.js","components/layout/Layout.js","redux/reducers/user.js","redux/reducers/index.js","redux/store.js","components/AppComponent.js","index.js"],"names":["verifyLoginRequest","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","username","url","res","wrap","_context","prev","next","concat","axios","get","sent","status","data","count","abrupt","results","stop","_x","apply","this","arguments","getPlanetsRequest","_ref2","_callee2","name","_context2","_x2","Search","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","searchPlaces","serch","defaultCall","searchKeyword","totalPopulation","i","element","trim","setState","planets","length","population","parseFloat","console","log","toggle","prevState","showModal","renderPlanets","usablePlanets","filter","planet","state","sort","b","map","index","persentage","toFixed","react_default","createElement","Card","key","className","CardBody","CardTitle","style","marginBottom","fontSize","CardText","terrain","gravity","Progress","value","Math","ceil","marginTop","onClick","planetDetails","_this2","_this$state","Container","Row","Col","xs","sm","md","InputGroup","Input","type","placeholder","onChange","e","target","InputGroupAddon","addonType","Button","color","ListGroup","Modal","isOpen","ModalHeader","ModalBody","Table","surface_water","orbital_period","diameter","ModalFooter","Component","Home","user","isLoggedIn","SearchComponent","Redirect","to","connect","loginUser","logoutUser","Login","handleSwChange","preventDefault","swName","defineProperty","validateForm","password","errorMessage","handleSubmit","submitting","birth_year","actions","t0","login","Fragment","size","offset","Alert","Form","onSubmit","FormGroup","Label","for","routes","path","exact","component","HomeComponent","dispatch","bindActionCreators","Header","logout","window","location","href","site","Layout","layout_Header","Switch","route","idx","Route","render","initialState","undefined","action","objectSpread","combineReducers","config","whiteList","storage","persistedReducer","persistReducer","rootReducer","middleware","push","thunk","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","store","createStore","persistor","persistStore","configStore","App","es","integration_react","loading","HashRouter","ReactDOM","AppComponent","document","getElementById"],"mappings":"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","file":"static/js/main.23b2f367.chunk.js","sourcesContent":["import { BASE_API_URL } from \"./../config/config\";\nimport axios from \"axios\";\n\nexport const verifyLoginRequest = async username => {\n  const url = `${BASE_API_URL}people/?search=${username}`;\n  const res = await axios.get(url);\n  if (res.status === 200 && res.data.count === 1) {\n    return res.data.results[0];\n  }\n  return false;\n};\nexport const getPlanetsRequest = async name => {\n  const url = `${BASE_API_URL}planets/?search=${name}`;\n  const res = await axios.get(url);\n  if (res.status === 200) {\n    return res.data.results;\n  }\n  return false;\n};\n","export const BASE_API_URL = 'https://swapi.co/api/';\n","import React, { Component } from \"react\";\nimport {\n  Container,\n  Col,\n  Input,\n  Row,\n  Card,\n  CardBody,\n  CardTitle,\n  CardText,\n  InputGroup,\n  ListGroup,\n  Progress,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  Table,\n  InputGroupAddon\n} from \"reactstrap\";\nimport { getPlanetsRequest } from \"../redux/Apis\";\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      planets: [],\n      totalPopulation: 0,\n      planetDetails: \"\",\n      showModal: false\n    };\n  }\n  componentDidMount() {\n    this.searchPlaces(\"\", true);\n  }\n\n  searchPlaces = async (serch, defaultCall) => {\n    const searchKeyword = serch.trim();\n    if (searchKeyword || defaultCall) {\n      const res = await getPlanetsRequest(searchKeyword);\n      if (res) {\n        this.setState({ planets: res });\n        let totalPopulation = 0;\n        if (res.length) {\n          for (let i = 0; i < res.length; i++) {\n            const element = res[i];\n            if (element.population && element.population !== \"unknown\") {\n              totalPopulation += parseFloat(element.population);\n            }\n          }\n        }\n\n        this.setState({ totalPopulation: totalPopulation });\n        console.log(totalPopulation);\n        return null;\n      }\n    } else {\n      this.setState({ planets: [] });\n      return null;\n    }\n  };\n\n  toggle = () => {\n    this.setState(prevState => ({\n      showModal: !prevState.showModal\n    }));\n  };\n\n  renderPlanets = planets => {\n    const usablePlanets = planets.filter(\n      planet => planet.name !== \"unknown\" && planet.population !== \"unknown\"\n    );\n    const { totalPopulation } = this.state;\n    usablePlanets.sort(\n      (a, b) => parseFloat(b.population) - parseFloat(a.population)\n    );\n    return usablePlanets.map((planet, index) => {\n      const persentage = ((planet.population * 100) / totalPopulation).toFixed(\n        3\n      );\n      return (\n        <Card key={planet.name} className=\"mt-2\">\n          <CardBody>\n            <CardTitle style={{ marginBottom: 4, fontSize: 24 }}>\n              <b>{planet.name}</b>\n            </CardTitle>\n            <CardText style={{ marginBottom: 2 }}>\n              <b>{planet.name}</b> is made of mostly <b>{planet.terrain}</b> and\n              has gravity of{\" \"}\n              <b>\n                {planet.gravity && planet.gravity !== \"N/A\"\n                  ? planet.gravity\n                  : \"1 standard\"}\n              </b>\n              .\n            </CardText>\n            <CardText style={{ marginBottom: 2 }}>\n              It has population of <b>{planet.population}</b> which is{\" \"}\n              <b>{persentage}%</b> of total population from current list.\n            </CardText>\n            <Progress value={Math.ceil(persentage)} style={{ marginTop: 4 }} />\n            <button\n              className=\"btn btn-info mt-2\"\n              onClick={() =>\n                this.setState({ showModal: true, planetDetails: planet })\n              }\n            >\n              View Details\n            </button>\n          </CardBody>\n        </Card>\n      );\n    });\n  };\n\n  render() {\n    const { planetDetails, planets } = this.state;\n    return (\n      <Container>\n        <Row>\n          <Col></Col>\n        </Row>\n        <Row>\n          <Col xs=\"0\" sm=\"1\"></Col>\n          <Col xs=\"12\" sm=\"10\" md=\"10\">\n            <InputGroup>\n              <Input\n                type=\"text\"\n                name=\"searchKeyword\"\n                placeholder={\"Search For Planets\"}\n                onChange={e => this.searchPlaces(e.target.value)}\n              />\n              <InputGroupAddon addonType=\"append\">\n                <Button color=\"secondary\">Search</Button>\n              </InputGroupAddon>\n            </InputGroup>\n          </Col>\n          <Col sm=\"4\"></Col>\n        </Row>\n        <br />\n        <Row>\n          <Col xs=\"0\" sm=\"1\" md=\"1\"></Col>\n          <Col xs=\"12\" sm=\"10\" md=\"10\">\n            <ListGroup>{this.renderPlanets(planets)}</ListGroup>\n          </Col>\n          <Col xs=\"0\" sm=\"1\" md=\"1\"></Col>\n          {planetDetails ? (\n            <Modal isOpen={this.state.showModal} toggle={this.toggle}>\n              <ModalHeader toggle={this.toggle}>Planet Detail</ModalHeader>\n              <ModalBody>\n                <Table>\n                  <tbody>\n                    <tr>\n                      <th>Name</th>\n                      <td>{planetDetails.name}</td>\n                    </tr>\n                    <tr>\n                      <th>Surface Water (in %)</th>\n                      <td>{planetDetails.surface_water}</td>\n                    </tr>\n                    <tr>\n                      <th>Gravity</th>\n                      <td>{planetDetails.gravity}</td>\n                    </tr>\n                    <tr>\n                      <th>Orbital Period</th>\n                      <td>{planetDetails.orbital_period}</td>\n                    </tr>\n                    <tr>\n                      <th>Diameter</th>\n                      <td>{planetDetails.diameter}</td>\n                    </tr>\n                    <tr>\n                      <th>Population</th>\n                      <td>{planetDetails.population}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"secondary\" onClick={this.toggle}>\n                  Close\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Search from \"./SearchComponent\";\nimport { connect } from \"react-redux\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { user } = this.props;\n    if (!user.isLoggedIn) {\n      return <Redirect to=\"/login\" />;\n    }\n    return <Search />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Home);\n","import { USER_LOGIN, USER_LOGOUT } from \"./../types\";\n\nexport const loginUser = (isLoggedIn, user) => ({\n  type: USER_LOGIN,\n  isLoggedIn,\n  user\n});\n\nexport const logoutUser = () => ({\n  type: USER_LOGOUT\n});\n","export const USER_LOGIN = \"USER_LOGIN\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Container,\n  Col,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Row,\n  Button,\n  Alert\n} from \"reactstrap\";\nimport { loginUser } from \"../redux/actions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport { verifyLoginRequest } from \"./../redux/Apis\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errorMessage: \"\",\n      login: false,\n      submitting: false\n    };\n  }\n\n  componentDidMount() {}\n\n  handleSwChange = e => {\n    e.preventDefault();\n    var swName = e.target.name;\n    this.setState({\n      [swName]: e.target.value\n    });\n  };\n\n  validateForm = () => {\n    if (!this.state.username) {\n      this.setState({ errorMessage: \"Please enter username\" });\n      return false;\n    }\n    if (!this.state.password) {\n      this.setState({ errorMessage: \"Please enter password\" });\n      return false;\n    }\n    return true;\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    if (this.validateForm()) {\n      this.setState({ errorMessage: \"\", submitting: true });\n      try {\n        const res = await verifyLoginRequest(this.state.username);\n        if (res) {\n          if (res.birth_year === this.state.password) {\n            delete res.birth_year;\n            this.props.actions.loginUser(true, res);\n          } else {\n            this.setState({\n              errorMessage: \"Password is incorrect\",\n              submitting: false\n            });\n          }\n        } else {\n          this.setState({\n            errorMessage: \"Invalid Login details\",\n            submitting: false\n          });\n        }\n      } catch (error) {\n        this.setState({\n          errorMessage: \"Something went wrong with API\",\n          submitting: false\n        });\n      }\n    }\n  };\n\n  render() {\n    const { user } = this.props;\n    if (user.isLoggedIn) {\n      return <Redirect to=\"/\" />;\n    }\n    const { errorMessage, submitting } = this.state;\n    return (\n      <React.Fragment>\n        <Container>\n          <Row>\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n              <h2>Sign In</h2>\n              {errorMessage ? <Alert color=\"danger\">{errorMessage}</Alert> : \"\"}\n\n              <Form className=\"form\" onSubmit={this.handleSubmit}>\n                <FormGroup>\n                  <Label>Username</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Username\"\n                    onChange={this.handleSwChange}\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"password\">Password</Label>\n                  <Input\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={this.handleSwChange}\n                    placeholder=\"********\"\n                  />\n                </FormGroup>\n                <Button>{submitting ? \"Submitting..\" : \"Submit\"}</Button>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({ loginUser }, dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n","import HomeComponent from \"../components/HomeComponent\";\nimport LoginComponent from \"../components/LoginComponent\";\n\nconst routes = [\n  { path: \"/\", exact: true, name: \"Home\", component: HomeComponent },\n  { path: \"/login\", exact: true, name: \"Login\", component: LoginComponent }\n];\n\nexport default routes;\n","import React, { Component } from \"react\";\nimport { logoutUser } from \"./../../redux/actions\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logout: false\n    };\n  }\n\n  logout = () => {\n    this.props.actions.logoutUser();\n    window.location.href = \"#/login\";\n  };\n\n  render() {\n    const { user } = this.props;\n    const site = `Star Wars Demo${\n      user && user.user ? \" ( \" + user.user.name + \" )\" : \"\"\n    }`;\n    return (\n      <div className=\"header\">\n        <nav className=\"navbar navbar-expand-lg navbar-light menu\">\n          <div className=\"navbar-nav col-md-11\">\n            <a className=\"nav-item nav-link active \" href={\"/\"}>\n              {site}\n              <span className=\"sr-only\">(current)</span>\n            </a>\n          </div>\n          {user.isLoggedIn ? (\n            <button className=\"btn btn-success col-md-1\" onClick={this.logout}>\n              Logout\n            </button>\n          ) : (\n            \"\"\n          )}\n        </nav>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({ logoutUser }, dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport routes from \"../../routes\";\nimport Header from \"./Header\";\n\nimport \"../../css/App.css\";\n\nclass Layout extends Component {\n  render() {\n    return (\n      <>\n        <Header />\n        <br />\n        <Switch>\n          {routes.map((route, idx) => {\n            return route.component ? (\n              <Route\n                key={idx}\n                path={route.path}\n                exact={route.exact}\n                name={route.name}\n                render={props => <route.component {...props} />}\n              />\n            ) : null;\n          })}\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default Layout;\n","import { USER_LOGIN, USER_LOGOUT } from \"./../types\";\n\nconst initialState = {\n  isLoggedIn: false,\n  user: null\n};\n\nconst user = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_LOGIN:\n      return {\n        ...state,\n        ...{\n          isLoggedIn: action.isLoggedIn,\n          user: action.user\n        }\n      };\n    case USER_LOGOUT:\n      return {\n        ...state,\n        ...{\n          isLoggedIn: false,\n          user: null\n        }\n      };\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","import { combineReducers } from \"redux\";\nimport user from \"./user\";\n\nexport default combineReducers({\n  user\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport thunk from \"redux-thunk\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport rootReducer from \"./reducers\";\n\nconst config = {\n  key: \"root\",\n  whiteList: ['user'],\n  storage\n};\n\nconst persistedReducer = persistReducer(config, rootReducer);\n\nconst middleware = [];\nmiddleware.push(thunk);\n\nconst enhancers = [applyMiddleware(...middleware)];\n\nconst composedEnhancers = composeWithDevTools(...enhancers);\nconst store = createStore(persistedReducer, {}, composedEnhancers);\n\nexport default () => {\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Layout from \"./layout/Layout\";\n\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\nimport configStore from \"./../redux/store\";\n\nconst { store, persistor } = configStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <HashRouter>\n            <Switch>\n              <Route path=\"/\" name=\"Home\" component={Layout} />\n            </Switch>\n          </HashRouter>\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppComponent from \"./components/AppComponent\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\nReactDOM.render(<AppComponent />, document.getElementById(\"root\"));\n"],"sourceRoot":""}